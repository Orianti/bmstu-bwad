# Generated by Django 3.0.6 on 2020-05-29 19:36

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Camera',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'камера',
                'verbose_name_plural': 'камеры',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='название')),
            ],
            options={
                'verbose_name': 'город',
                'verbose_name_plural': 'города',
            },
        ),
        migrations.CreateModel(
            name='Producer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.CharField(max_length=100, verbose_name='название организации')),
                ('phone', models.CharField(max_length=10, verbose_name='телефон')),
                ('contract_expires', models.DateField(verbose_name='срок действия договора')),
                ('notes', models.TextField(verbose_name='заметки')),
                ('city', models.ManyToManyField(to='app.City', verbose_name='город')),
            ],
            options={
                'verbose_name': 'производитель',
                'verbose_name_plural': 'производители',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state', models.IntegerField(choices=[(0, 'OK'), (1, 'WARNING'), (2, 'ERROR'), (3, 'FAILURE')], verbose_name='состояние')),
                ('logs', models.TextField(verbose_name='журнал')),
            ],
            options={
                'verbose_name': 'состояние',
                'verbose_name_plural': 'состояния',
            },
        ),
        migrations.CreateModel(
            name='Specifications',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(choices=[(0, 'Speed'), (1, 'AVERAGE_SPEED'), (2, 'RED_LIGHT'), (3, 'DOUBLE_WHITE_LINE'), (4, 'BUS_LANE'), (5, 'TOLLBOOTH'), (6, 'LEVEL_CROSSING'), (7, 'CONGESTION_CHARGE')], verbose_name='тип')),
                ('date_of_manufacture', models.DateField(verbose_name='дата производства')),
                ('service_frequency', models.IntegerField(verbose_name='частота сервисного обслуживания')),
                ('notes', models.TextField(verbose_name='заметки')),
                ('producer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Producer', verbose_name='производитель')),
            ],
            options={
                'verbose_name': 'спецификация',
                'verbose_name_plural': 'спецификации',
            },
        ),
        migrations.CreateModel(
            name='ServiceOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization', models.CharField(max_length=100, verbose_name='название организации')),
                ('phone', models.CharField(max_length=10, verbose_name='телефон')),
                ('contract_expires', models.DateField(verbose_name='срок действия договора')),
                ('notes', models.TextField(verbose_name='заметки')),
                ('city', models.ManyToManyField(to='app.City', verbose_name='город')),
            ],
            options={
                'verbose_name': 'сервисная организация',
                'verbose_name_plural': 'сервисные организации',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_data', models.DateField(verbose_name='дата сервис')),
                ('info', models.TextField(verbose_name='информация')),
                ('camera', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Camera', verbose_name='ID камеры')),
                ('service_organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.ServiceOrganization', verbose_name='сервисная организация')),
            ],
            options={
                'verbose_name': 'сервис',
                'verbose_name_plural': 'сервисы',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=100, verbose_name='улица')),
                ('support', models.IntegerField(verbose_name='номер опоры')),
                ('notes', models.TextField(verbose_name='заметки')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.City', verbose_name='город')),
            ],
            options={
                'verbose_name': 'положение',
                'verbose_name_plural': 'положения',
            },
        ),
        migrations.AddField(
            model_name='camera',
            name='location',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.Location', verbose_name='местоположение'),
        ),
        migrations.AddField(
            model_name='camera',
            name='specifications',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='app.Specifications', verbose_name='спецификации'),
        ),
        migrations.AddField(
            model_name='camera',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.State', verbose_name='состояние'),
        ),
    ]
